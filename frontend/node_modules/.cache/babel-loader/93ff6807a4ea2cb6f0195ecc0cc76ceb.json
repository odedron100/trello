{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/HelpersModal/HelpersModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { removeList } from '../../store/actions/ListActions';\nimport { useDispatch } from 'react-redux';\nimport './HelpersModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HelpersModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const handleDocumentClick = useCallback(e => {\n    if (e.path[0] === props.cardModalRef.current || e.path[1] === props.cardModalRef.current || e.path[2] === props.cardModalRef.current || e.target === props.cardModalRef.current) {\n      props.setWhichSideBarModalOpen('');\n    }\n\n    if (e.target === props.cardModalRef.current) {\n      return;\n    }\n\n    if (e.target === props.cardModalContaiinerRef.current) {\n      props.setIsOpenModal(false);\n    }\n  }, [props.cardModalRef, props.cardModalContaiinerRef]);\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const onRemoveList = () => {\n    dispatch(removeList(props.list._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"helpers-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-helpers-header\",\n      children: \"List Helpers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remove-list item\",\n      onClick: onRemoveList,\n      children: \"Remove list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 8\n  }, this);\n};\n\n_s(HelpersModal, \"7pt4uVtlvOtntFqDRxYjnPiby9E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = HelpersModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelpersModal\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/HelpersModal/HelpersModal.jsx"],"names":["removeList","useDispatch","HelpersModal","props","dispatch","handleDocumentClick","useCallback","e","path","cardModalRef","current","target","setWhichSideBarModalOpen","cardModalContaiinerRef","setIsOpenModal","useEffect","document","addEventListener","removeEventListener","onRemoveList","list","_id"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,iCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEG,QAAMI,mBAAmB,GAAGC,WAAW,CAAEC,CAAD,IAAO;AAC9C,QAAGA,CAAC,CAACC,IAAF,CAAO,CAAP,MAAcL,KAAK,CAACM,YAAN,CAAmBC,OAAjC,IACIH,CAAC,CAACC,IAAF,CAAO,CAAP,MAAcL,KAAK,CAACM,YAAN,CAAmBC,OADrC,IAEIH,CAAC,CAACC,IAAF,CAAO,CAAP,MAAcL,KAAK,CAACM,YAAN,CAAmBC,OAFrC,IAGIH,CAAC,CAACI,MAAF,KAAaR,KAAK,CAACM,YAAN,CAAmBC,OAHvC,EAG+C;AAC3CP,MAAAA,KAAK,CAACS,wBAAN,CAA+B,EAA/B;AACH;;AAED,QAAIL,CAAC,CAACI,MAAF,KAAaR,KAAK,CAACM,YAAN,CAAmBC,OAApC,EAA6C;AACzC;AACH;;AAGG,QAAIH,CAAC,CAACI,MAAF,KAAaR,KAAK,CAACU,sBAAN,CAA6BH,OAA9C,EAAuD;AACnDP,MAAAA,KAAK,CAACW,cAAN,CAAqB,KAArB;AACH;AACJ,GAhBqC,EAgBnC,CAACX,KAAK,CAACM,YAAP,EAAqBN,KAAK,CAACU,sBAA3B,CAhBmC,CAAvC;AAkBHE,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCZ,mBAAnC;AACA,WAAO,MAAM;AACTW,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCb,mBAAtC;AACH,KAFD;AAGH,GALQ,CAAT;;AAQA,QAAMc,YAAY,GAAG,MAAM;AACvBf,IAAAA,QAAQ,CAACJ,UAAU,CAACG,KAAK,CAACiB,IAAN,CAAWC,GAAZ,CAAX,CAAR;AACH,GAFD;;AAIA,sBACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAEF,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CAvCM;;GAAMjB,Y;UACQD,W;;;KADRC,Y","sourcesContent":["import {removeList} from '../../store/actions/ListActions'\nimport { useDispatch } from 'react-redux';\nimport './HelpersModal.scss'\n\nexport const HelpersModal = (props) => {\n    const dispatch = useDispatch();\n\n       const handleDocumentClick = useCallback((e) => {\n        if(e.path[0] === props.cardModalRef.current\n            || e.path[1] === props.cardModalRef.current\n            || e.path[2] === props.cardModalRef.current\n            || e.target === props.cardModalRef.current){\n            props.setWhichSideBarModalOpen('')\n        }\n\n        if (e.target === props.cardModalRef.current) {\n            return;\n        }\n\n\n            if (e.target === props.cardModalContaiinerRef.current) {\n                props.setIsOpenModal(false);\n            }\n        }, [props.cardModalRef, props.cardModalContaiinerRef]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        }\n    });\n\n\n    const onRemoveList = () => {\n        dispatch(removeList(props.list._id))\n    }\n\n    return (\n       <div className=\"helpers-modal\">\n            <div className=\"modal-helpers-header\">List Helpers...</div>\n            <div className=\"remove-list item\" onClick={onRemoveList}>Remove list</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}