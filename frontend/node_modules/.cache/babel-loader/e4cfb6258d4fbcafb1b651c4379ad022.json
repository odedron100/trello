{"ast":null,"code":"const INITIAL_STATE = {\n  lists: {},\n  currList: null\n};\nexport function listReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'SET_LISTS':\n      console.log('SET_LISTS action.lists', action.lists);\n      return { ...state,\n        lists: { ...action.lists\n        }\n      };\n\n    case 'SET_LIST':\n      return { ...state,\n        currList: action.list\n      };\n\n    case 'ADD_LIST':\n      return { ...state,\n        lists: { ...state.lists,\n          [action.list._id]: { ...action.list\n          }\n        } // lists: [...state.lists, action.list]\n\n      };\n\n    case 'REMOVE_LIST':\n      const newListsObject = { ...state.lists\n      };\n      Reflect.deleteProperty(newListsObject, action.listId);\n      return { ...state,\n        lists: newListsObject\n      };\n\n    case 'UPDATE_LIST':\n      const {\n        updatedList\n      } = action;\n      return { ...state,\n        // lists: state.lists.map(list => list._id === updatedList._id ? updatedList : list)\n        lists: { ...state.lists,\n          [updatedList._id]: { ...updatedList\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/store/reducers/ListReducer.js"],"names":["INITIAL_STATE","lists","currList","listReducer","state","action","type","console","log","list","_id","newListsObject","Reflect","deleteProperty","listId","updatedList"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,aAA7B,EAA4CK,MAA5C,EAAoD;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,MAAM,CAACJ,KAA7C;AACA,aAAO,EACL,GAAGG,KADE;AAELH,QAAAA,KAAK,EAAE,EAAE,GAAGI,MAAM,CAACJ;AAAZ;AAFF,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAFZ,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,KAAK,EAAE,EAAE,GAAGG,KAAK,CAACH,KAAX;AAAkB,WAACI,MAAM,CAACI,IAAP,CAAYC,GAAb,GAAmB,EAAE,GAAGL,MAAM,CAACI;AAAZ;AAArC,SAFF,CAGL;;AAHK,OAAP;;AAKF,SAAK,aAAL;AACE,YAAME,cAAc,GAAG,EAAE,GAAGP,KAAK,CAACH;AAAX,OAAvB;AACAW,MAAAA,OAAO,CAACC,cAAR,CAAuBF,cAAvB,EAAuCN,MAAM,CAACS,MAA9C;AAEA,aAAO,EACL,GAAGV,KADE;AAELH,QAAAA,KAAK,EAAEU;AAFF,OAAP;;AAIF,SAAK,aAAL;AACE,YAAM;AAAEI,QAAAA;AAAF,UAAkBV,MAAxB;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACAH,QAAAA,KAAK,EAAE,EAAE,GAAGG,KAAK,CAACH,KAAX;AAAkB,WAACc,WAAW,CAACL,GAAb,GAAmB,EAAE,GAAGK;AAAL;AAArC;AAHF,OAAP;;AAKF;AACE,aAAOX,KAAP;AAlCJ;AAoCD","sourcesContent":["const INITIAL_STATE = {\r\n  lists: {},\r\n  currList: null\r\n}\r\n\r\nexport function listReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_LISTS':\r\n      console.log('SET_LISTS action.lists', action.lists);\r\n      return {\r\n        ...state,\r\n        lists: { ...action.lists }\r\n      }\r\n    case 'SET_LIST':\r\n      return {\r\n        ...state,\r\n        currList: action.list\r\n      }\r\n    case 'ADD_LIST':\r\n      return {\r\n        ...state,\r\n        lists: { ...state.lists, [action.list._id]: { ...action.list } }\r\n        // lists: [...state.lists, action.list]\r\n      }\r\n    case 'REMOVE_LIST':\r\n      const newListsObject = { ...state.lists };\r\n      Reflect.deleteProperty(newListsObject, action.listId);\r\n\r\n      return {\r\n        ...state,\r\n        lists: newListsObject\r\n      }\r\n    case 'UPDATE_LIST':\r\n      const { updatedList } = action\r\n      return {\r\n        ...state,\r\n        // lists: state.lists.map(list => list._id === updatedList._id ? updatedList : list)\r\n        lists: { ...state.lists, [updatedList._id]: { ...updatedList } }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}