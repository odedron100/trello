{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/HelpersModal/HelpersModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { removeList, saveList } from '../../store/actions/BoardActions';\nimport { useDispatch } from 'react-redux';\nimport './HelpersModal.scss';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { utilService } from '../../services/util.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HelpersModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const helperModalRef = useRef(null);\n  const handleDocumentClick = useCallback(e => {\n    if (e.path[0] === helperModalRef.current || e.path[1] === helperModalRef.current || e.path[2] === helperModalRef.current || e.target === helperModalRef.current) {\n      return;\n    }\n\n    if (props.isOpenHelpersModal) {\n      props.setIsOpenHelpersModal(false);\n    } // if (!formContainerRef.current.contains(e.target)) {\n    //     setIsItemFormOpen(false);\n    // }\n\n  }, [helperModalRef]);\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const onRemoveList = () => {\n    dispatch(removeList(props.list._id));\n  };\n\n  const onCopyList = () => {\n    const newList = { ...props.list,\n      cards: { ...props.list.cards\n      }\n    };\n    delete newList._id; // Object.keys(newList.cards).forEach( cardId => {\n    //     delete newList.cards[cardId].id;\n    // })\n\n    console.log('newList', newList);\n    dispatch(saveList(newList));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"helpers-modal\",\n    ref: helperModalRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-helpers-header\",\n      children: \"List Helpers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remove-list item\",\n      onClick: onRemoveList,\n      children: \"Remove list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"copy-list item\",\n      onClick: onCopyList,\n      children: \"Copy list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 8\n  }, this);\n};\n\n_s(HelpersModal, \"p+GEbpuJZIxSMjbCqmxVSvEKxFo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = HelpersModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelpersModal\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/HelpersModal/HelpersModal.jsx"],"names":["removeList","saveList","useDispatch","useCallback","useEffect","useRef","utilService","HelpersModal","props","dispatch","helperModalRef","handleDocumentClick","e","path","current","target","isOpenHelpersModal","setIsOpenHelpersModal","document","addEventListener","removeEventListener","onRemoveList","list","_id","onCopyList","newList","cards","console","log"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,kCAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,qBAAP;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,SAAQC,WAAR,QAA0B,6BAA1B;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,cAAc,GAAGL,MAAM,CAAC,IAAD,CAA7B;AAEC,QAAMM,mBAAmB,GAAGR,WAAW,CAAES,CAAD,IAAO;AAC5C,QAAIA,CAAC,CAACC,IAAF,CAAO,CAAP,MAAcH,cAAc,CAACI,OAA7B,IACGF,CAAC,CAACC,IAAF,CAAO,CAAP,MAAcH,cAAc,CAACI,OADhC,IAEGF,CAAC,CAACC,IAAF,CAAO,CAAP,MAAcH,cAAc,CAACI,OAFhC,IAGGF,CAAC,CAACG,MAAF,KAAaL,cAAc,CAACI,OAHnC,EAG4C;AACxC;AACH;;AAED,QAAIN,KAAK,CAACQ,kBAAV,EAA8B;AAC1BR,MAAAA,KAAK,CAACS,qBAAN,CAA4B,KAA5B;AACH,KAV2C,CAY5C;AACA;AACA;;AACH,GAfuC,EAerC,CAACP,cAAD,CAfqC,CAAvC;AAiBDN,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCR,mBAAnC;AACA,WAAO,MAAM;AACTO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCT,mBAAtC;AACH,KAFD;AAGH,GALQ,CAAT;;AAOA,QAAMU,YAAY,GAAG,MAAM;AACvBZ,IAAAA,QAAQ,CAACT,UAAU,CAACQ,KAAK,CAACc,IAAN,CAAWC,GAAZ,CAAX,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAG,EAAC,GAAGjB,KAAK,CAACc,IAAV;AAAgBI,MAAAA,KAAK,EAAC,EAAC,GAAGlB,KAAK,CAACc,IAAN,CAAWI;AAAf;AAAtB,KAAhB;AACA,WAAOD,OAAO,CAACF,GAAf,CAFqB,CAGrB;AACA;AACA;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACAhB,IAAAA,QAAQ,CAACR,QAAQ,CAACwB,OAAD,CAAT,CAAR;AACH,GARD;;AAUA,sBACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEf,cAApC;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAEW,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAGK;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAEG,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAOH,CAjDM;;GAAMjB,Y;UACQL,W;;;KADRK,Y","sourcesContent":["import {removeList, saveList} from '../../store/actions/BoardActions'\nimport { useDispatch } from 'react-redux';\nimport './HelpersModal.scss'\nimport { useCallback, useEffect, useRef } from 'react';\nimport {utilService} from '../../services/util.service'\n\nexport const HelpersModal = (props) => {\n    const dispatch = useDispatch();\n    const helperModalRef = useRef(null);\n\n     const handleDocumentClick = useCallback((e) => {\n        if (e.path[0] === helperModalRef.current\n            || e.path[1] === helperModalRef.current\n            || e.path[2] === helperModalRef.current\n            || e.target === helperModalRef.current) {\n            return;\n        }\n\n        if (props.isOpenHelpersModal) {\n            props.setIsOpenHelpersModal(false)\n        }\n\n        // if (!formContainerRef.current.contains(e.target)) {\n        //     setIsItemFormOpen(false);\n        // }\n    }, [helperModalRef]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        }\n    });\n\n    const onRemoveList = () => {\n        dispatch(removeList(props.list._id))\n    }\n\n    const onCopyList = () => {\n        const newList = {...props.list, cards:{...props.list.cards}}\n        delete newList._id;\n        // Object.keys(newList.cards).forEach( cardId => {\n        //     delete newList.cards[cardId].id;\n        // })\n        console.log('newList', newList);\n        dispatch(saveList(newList))\n    }\n\n    return (\n       <div className=\"helpers-modal\" ref={helperModalRef}>\n            <div className=\"modal-helpers-header\">List Helpers...</div>\n            <div className=\"remove-list item\" onClick={onRemoveList}>Remove list</div>\n            <div className=\"copy-list item\" onClick={onCopyList}>Copy list</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}