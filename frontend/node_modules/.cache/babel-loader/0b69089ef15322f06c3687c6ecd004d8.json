{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CardModal/CardModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useCallback, useState } from 'react';\nimport { saveList } from '../../store/actions/ListActions';\nimport './CardModal.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LabelsModal } from '../LabelsModal';\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\nimport { utilService } from '../../services/util.service';\nimport { CardListChange } from '../CardListChange/CardListChange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cardModalContaiinerRef = useRef(null);\n  const cardModalRef = useRef(null);\n  const sideBarModalRef = useRef(null);\n  const [cardToSave, setCardToSave] = useState(props.card);\n  const [newTaskTitleToAdd, setNewTaskTitleToAdd] = useState(null);\n  const [whichSideBarModalOpen, setWhichSideBarModalOpen] = useState('');\n  const lists = useSelector(state => state.listReducer.lists);\n  const handleDocumentClick = useCallback(e => {\n    if (e.path[0] === cardModalRef.current || e.path[1] === cardModalRef.current || e.path[2] === cardModalRef.current || e.target === cardModalRef.current) {\n      setWhichSideBarModalOpen('');\n    }\n\n    if (e.target === cardModalRef.current) {\n      return;\n    }\n\n    if (e.target === cardModalContaiinerRef.current) {\n      props.setIsOpenModal(false);\n    }\n  }, [cardModalRef, cardModalContaiinerRef]);\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const changeCardDetails = e => {\n    const type = e.target.name;\n    const value = e.target.value;\n    setCardToSave({ ...cardToSave,\n      [type]: value\n    });\n  };\n\n  const updateCard = (e, cardToSave) => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    cards[cardToSave.id] = cardToSave;\n    dispatch(saveList(newList));\n  };\n\n  const openSideBarModal = (e, value) => {\n    setWhichSideBarModalOpen(value);\n  };\n\n  const updateLabelsCard = (e, value) => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n\n    if (!cards[cardToSave.id].color.includes(value)) {\n      cards[cardToSave.id].color = [...cards[cardToSave.id].color, value];\n    }\n\n    dispatch(saveList(newList));\n  };\n\n  const removeCard = e => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    delete cards[cardToSave.id];\n    dispatch(saveList(newList));\n    props.setIsOpenModal(false);\n  };\n\n  const watchCard = e => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    cards[cardToSave.id].isWatch = !cards[cardToSave.id].isWatch;\n    dispatch(saveList(newList));\n  };\n\n  const addCheckList = title => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    const checkList = {\n      id: utilService.makeId(),\n      title,\n      tasks: []\n    };\n    cards[cardToSave.id].checkLists.push(checkList);\n    dispatch(saveList(newList));\n  };\n\n  const addTaskToCheckList = (e, checkListId) => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    const cardCheckLists = cards[cardToSave.id].checkLists;\n    const checkListToUpdateIdx = cardCheckLists.findIndex(checkListFromArray => {\n      return checkListFromArray.id === checkListId;\n    });\n    const taskToAdd = {\n      id: utilService.makeId(),\n      title: newTaskTitleToAdd,\n      isDone: false\n    };\n    cardCheckLists[checkListToUpdateIdx].tasks.push(taskToAdd);\n    dispatch(saveList(newList));\n  };\n\n  const updateNewTaskTitle = e => {\n    setNewTaskTitleToAdd(e.target.value);\n  };\n\n  const changeCardList = e => {\n    const listOfCard = { ...props.list\n    };\n    const cards = listOfCard.cards;\n    const newListId = e.target.value;\n    cards[cardToSave.id].currList = newListId;\n    removeCard(null, cardToSave.id);\n    console.log('e.target.value', e.target.value);\n    console.log('lists', lists);\n    console.log('newListId', newListId); // const newListIdx = lists.findIndex(list => {\n    //     return list._id === newListId\n    // })\n\n    const newList = lists[newListId];\n    newList.cards = { ...newList.cards,\n      [cardToSave.id]: cardToSave\n    };\n    dispatch(saveList(newList));\n  };\n\n  const updateTaskDone = (e, checkListId, taskId) => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    const cardCheckLists = cards[cardToSave.id].checkLists;\n    const checkListToUpdateIdx = cardCheckLists.findIndex(checkListFromArray => {\n      return checkListFromArray.id === checkListId;\n    });\n    const currTaskIsDone = cardCheckLists[checkListToUpdateIdx].tasks[taskId].isDone;\n    cardCheckLists[checkListToUpdateIdx].tasks[taskId].isDone = !currTaskIsDone;\n    dispatch(saveList(newList));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card-modal-container\",\n    ref: cardModalContaiinerRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-modal\",\n      ref: cardModalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-modal-container modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"title-modal-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-laptop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 58\n          }, this), \" Title\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-modal\",\n          children: props.card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardListChange, {\n        changeCardList: changeCardList,\n        cardToSave: cardToSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-container item-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-align-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 65\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 59\n              }, this), \" Description\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"description\",\n                id: \"description\",\n                cols: \"30\",\n                rows: \"10\",\n                placeholder: \"Description...\",\n                value: cardToSave.description,\n                onChange: e => changeCardDetails(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-button save-button-trello\",\n                onClick: e => updateCard(e, cardToSave),\n                children: \"SAVE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), cardToSave.checkLists.map((checkList, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkLists-container item-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"checkList\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-calendar-check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 65\n                }, this), \" \", checkList.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-checkList\",\n                children: \"DELETE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"check-list-result\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"percentage\",\n                children: \" 100 %\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"graph\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks-list\",\n              children: checkList.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkBox\",\n                    onChange: e => updateTaskDone(e, checkList.id, task.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-title\",\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"helpers\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-clock\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-user\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-ellipsis-h\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 45\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-task\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Add new task...\",\n                onChange: updateNewTaskTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-task-button\",\n                onClick: e => addTaskToCheckList(e, checkList.id),\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"side-bar-title\",\n            children: \"ADD TO CARD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels item\",\n            onClick: e => openSideBarModal(e, 'labels'),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 102\n            }, this), \" labels \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), whichSideBarModalOpen === 'labels' && /*#__PURE__*/_jsxDEV(LabelsModal, {\n            sideBarModalRef: sideBarModalRef,\n            updateLabelsCard: updateLabelsCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watch item\",\n            onClick: watchCard,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 73\n            }, this), \" Watch \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list item\",\n            onClick: e => openSideBarModal(e, 'checkList'),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-calendar-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 108\n            }, this), \" Checklist \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), whichSideBarModalOpen === 'checkList' && /*#__PURE__*/_jsxDEV(CheckListModal, {\n            sideBarModalRef: sideBarModalRef,\n            addCheckList: addCheckList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete item\",\n            onClick: removeCard,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 75\n            }, this), \" Delete Card \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardModal, \"15xPGAxpmIvUKW/jkqhEn/c98aU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CardModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardModal\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CardModal/CardModal.jsx"],"names":["useRef","useEffect","useCallback","useState","saveList","useDispatch","useSelector","LabelsModal","CheckListModal","utilService","CardListChange","CardModal","props","dispatch","cardModalContaiinerRef","cardModalRef","sideBarModalRef","cardToSave","setCardToSave","card","newTaskTitleToAdd","setNewTaskTitleToAdd","whichSideBarModalOpen","setWhichSideBarModalOpen","lists","state","listReducer","handleDocumentClick","e","path","current","target","setIsOpenModal","document","addEventListener","removeEventListener","changeCardDetails","type","name","value","updateCard","newList","list","cards","id","openSideBarModal","updateLabelsCard","color","includes","removeCard","watchCard","isWatch","addCheckList","title","checkList","makeId","tasks","checkLists","push","addTaskToCheckList","checkListId","cardCheckLists","checkListToUpdateIdx","findIndex","checkListFromArray","taskToAdd","isDone","updateNewTaskTitle","changeCardList","listOfCard","newListId","currList","console","log","updateTaskDone","taskId","currTaskIsDone","description","map","idx","task"],"mappings":"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","sourcesContent":["import { useRef,useEffect,useCallback, useState } from 'react';\nimport {saveList} from '../../store/actions/ListActions';\nimport './CardModal.scss';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { LabelsModal } from '../LabelsModal';\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\nimport { utilService } from '../../services/util.service';\nimport { CardListChange } from '../CardListChange/CardListChange';\n\nexport const CardModal = (props) => {\n    const dispatch = useDispatch();\n    const cardModalContaiinerRef = useRef(null);\n    const cardModalRef = useRef(null);\n    const sideBarModalRef = useRef(null);\n    const [cardToSave,setCardToSave] = useState(props.card);\n    const [newTaskTitleToAdd,setNewTaskTitleToAdd] = useState(null)\n    const [whichSideBarModalOpen,setWhichSideBarModalOpen] = useState('');\n    const lists = useSelector(state => state.listReducer.lists)\n\n    const handleDocumentClick = useCallback((e) => {\n        if(e.path[0] === cardModalRef.current\n            || e.path[1] === cardModalRef.current\n            || e.path[2] === cardModalRef.current\n            || e.target === cardModalRef.current){\n            setWhichSideBarModalOpen('')\n        }\n\n        if (e.target === cardModalRef.current) {\n            return;\n        }\n\n\n            if (e.target === cardModalContaiinerRef.current) {\n                props.setIsOpenModal(false);\n            }\n        }, [cardModalRef, cardModalContaiinerRef]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        }\n    });\n\n    const changeCardDetails = (e) => {\n        const type = e.target.name\n        const value = e.target.value\n            setCardToSave({...cardToSave, [type]: value})\n    }\n\n\n    const updateCard = (e,cardToSave) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        cards[cardToSave.id] = cardToSave\n        dispatch(saveList(newList))\n    }\n\n    const openSideBarModal = (e,value) => {\n        setWhichSideBarModalOpen(value)\n    }\n\n    const updateLabelsCard = (e,value) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        if(!cards[cardToSave.id].color.includes(value)){\n            cards[cardToSave.id].color = [...cards[cardToSave.id].color, value]\n        }\n\n        dispatch(saveList(newList))\n    }\n\n    const removeCard = (e) => {\n        const newList = {...props.list};\n        const cards = newList.cards\n        delete cards[cardToSave.id]\n        dispatch(saveList(newList))\n        props.setIsOpenModal(false)\n    }\n\n     const watchCard = (e) => {\n        const newList = {...props.list};\n        const cards = newList.cards\n        cards[cardToSave.id].isWatch = !cards[cardToSave.id].isWatch\n        dispatch(saveList(newList))\n    }\n\n    const addCheckList = (title) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        const checkList = {\n            id:utilService.makeId(),\n            title,\n            tasks:[]\n        }\n        cards[cardToSave.id].checkLists.push(checkList);\n        dispatch(saveList(newList))\n    }\n\n    const addTaskToCheckList = (e,checkListId) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        const cardCheckLists = cards[cardToSave.id].checkLists\n\n        const checkListToUpdateIdx = cardCheckLists.findIndex(checkListFromArray => {\n            return checkListFromArray.id === checkListId\n        })\n\n        const taskToAdd = {\n            id : utilService.makeId(),\n            title:newTaskTitleToAdd,\n            isDone: false\n        }\n        cardCheckLists[checkListToUpdateIdx].tasks.push(taskToAdd)\n        dispatch(saveList(newList))\n\n    }\n\n    const updateNewTaskTitle = (e) => {\n        setNewTaskTitleToAdd(e.target.value);\n    }\n\n    const changeCardList = (e) =>{\n        const listOfCard = {...props.list};\n        const cards = listOfCard.cards\n        const newListId = e.target.value;\n        cards[cardToSave.id].currList = newListId\n\n        removeCard(null,cardToSave.id)\n\n        console.log('e.target.value', e.target.value);\n        console.log('lists', lists);\n        console.log('newListId', newListId);\n        // const newListIdx = lists.findIndex(list => {\n        //     return list._id === newListId\n        // })\n        const newList = lists[newListId];\n        newList.cards = {...newList.cards,[cardToSave.id]:cardToSave};\n        dispatch(saveList(newList))\n    }\n\n    const updateTaskDone = (e,checkListId,taskId) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        const cardCheckLists = cards[cardToSave.id].checkLists\n\n        const checkListToUpdateIdx = cardCheckLists.findIndex(checkListFromArray => {\n            return checkListFromArray.id === checkListId\n        })\n\n        const currTaskIsDone = cardCheckLists[checkListToUpdateIdx].tasks[taskId].isDone;\n\n        cardCheckLists[checkListToUpdateIdx].tasks[taskId].isDone = !currTaskIsDone\n        dispatch(saveList(newList))\n    }\n\n    return (\n        <section className=\"card-modal-container\" ref={cardModalContaiinerRef}>\n            <div className=\"card-modal\" ref={cardModalRef}>\n                <div  className=\"title-modal-container modal-header\">\n                    <label className=\"title-modal-label\"><i className=\"fas fa-laptop\"></i> Title</label>\n                    <div className=\"title-modal\">{props.card.title}</div>\n                </div>\n                <CardListChange changeCardList={changeCardList} cardToSave={cardToSave}/>\n                {/* <div className=\"card-list\">In list\n                    <select className=\"card-list-select\" name=\"card-list\" onChange={changeCardList} value={cardToSave.currList}>\n                        {Object.keys(lists).map((listIdx) =>\n                            <option key={listIdx} value={lists[listIdx]._id}>{lists[listIdx].title}</option>\n                        )}\n                    </select>\n                </div> */}\n                <section className=\"main-container\">\n                    <main className=\"container\">\n                        <div className=\"description-container item-container\">\n                            <label htmlFor=\"description\"> <span><i className=\"fas fa-align-right\"></i> </span> Description</label>\n                            <main>\n                                <textarea name=\"description\"  id=\"description\" cols=\"30\" rows=\"10\" placeholder=\"Description...\" value={cardToSave.description} onChange={((e) => changeCardDetails(e))}></textarea>\n                                <button className=\"save-button save-button-trello\" onClick={((e) => updateCard(e,cardToSave))} >SAVE</button>\n                            </main>\n                        </div>\n                        {cardToSave.checkLists.map((checkList,idx) =>\n                            <div key={idx} className=\"checkLists-container item-container\">\n                                <header>\n                                    <label htmlFor=\"checkList\"> <span> <i className=\"far fa-calendar-check\"></i></span> {checkList.title}</label>\n                                    <button className=\"delete-checkList\">DELETE</button>\n                                </header>\n                                <div className=\"check-list-result\">\n                                    <div className=\"percentage\"> 100 %</div>\n                                    <div className=\"graph\"></div>\n                                </div>\n                                <div className=\"tasks-list\">\n                                    {checkList.tasks.map((task) =>\n                                        <div className=\"task\" key={task.id}>\n                                            <div className=\"task-info\">\n                                                <input type=\"checkBox\" onChange={((e) => updateTaskDone(e,checkList.id,task.id))}/>\n                                                <div className=\"task-title\">{task.title}</div>\n                                            </div>\n                                            <div className=\"helpers\">\n                                                <button><i className=\"far fa-clock\"></i></button>\n                                                <button><i className=\"far fa-user\"></i></button>\n                                                <button><i className=\"fas fa-ellipsis-h\"></i></button>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"add-task\">\n                                    <input type=\"text\" placeholder=\"Add new task...\" onChange={updateNewTaskTitle}/>\n                                    <button className=\"add-task-button\" onClick={((e) => addTaskToCheckList(e,checkList.id))}>Add task</button>\n                                </div>\n                            </div>\n                        )}\n                    </main>\n                    <div className=\"side-bar\">\n                        <header className=\"side-bar-title\">ADD TO CARD</header>\n                        <div className=\"labels item\" onClick={((e) => openSideBarModal(e,'labels'))}><i className=\"fas fa-tag\"></i> labels </div>\n                        {whichSideBarModalOpen === 'labels' && <LabelsModal sideBarModalRef={sideBarModalRef}  updateLabelsCard={updateLabelsCard} />}\n                        <div className=\"watch item\" onClick={watchCard}><i className=\"far fa-eye\"></i> Watch </div>\n                        <div className=\"todo-list item\" onClick={((e) => openSideBarModal(e,'checkList'))}><i className=\"far fa-calendar-check\"></i> Checklist </div>\n                        {whichSideBarModalOpen === 'checkList' && <CheckListModal sideBarModalRef={sideBarModalRef} addCheckList={addCheckList} />}\n                        <div className=\"delete item\" onClick={removeCard}><i className=\"far fa-trash-alt\"></i> Delete Card </div>\n                    </div>\n                </section>\n            </div>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}