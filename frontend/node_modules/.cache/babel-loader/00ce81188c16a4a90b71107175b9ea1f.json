{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CardSideBar/CardSideBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { LabelsModal } from '../LabelsModal';\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\nimport { utilService } from '../../services/util.service';\nimport './CardSideBar.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardSideBar = props => {\n  _s();\n\n  const [whichSideBarModalOpen, setWhichSideBarModalOpen] = useState('');\n  const sideBarModalRef = useRef(null);\n\n  const openSideBarModal = (e, value) => {\n    setWhichSideBarModalOpen(value);\n  };\n\n  const updateLabelsCard = (e, value) => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n\n    if (!cards[cardToSave.id].color.includes(value)) {\n      cards[cardToSave.id].color = [...cards[cardToSave.id].color, value];\n    }\n\n    dispatch(saveList(newList));\n  };\n\n  const watchCard = e => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    cards[cardToSave.id].isWatch = !cards[cardToSave.id].isWatch;\n    dispatch(saveList(newList));\n  };\n\n  const addCheckList = title => {\n    const newList = { ...props.list\n    };\n    const cards = newList.cards;\n    const checkList = {\n      id: utilService.makeId(),\n      title,\n      tasks: []\n    };\n    cards[cardToSave.id].checkLists.push(checkList);\n    dispatch(saveList(newList));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"side-bar-title\",\n      children: \"ADD TO CARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels item\",\n      onClick: e => openSideBarModal(e, 'labels'),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 90\n      }, this), \" labels \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), whichSideBarModalOpen === 'labels' && /*#__PURE__*/_jsxDEV(LabelsModal, {\n      sideBarModalRef: sideBarModalRef,\n      updateLabelsCard: updateLabelsCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watch item\",\n      onClick: watchCard,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-eye\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 61\n      }, this), \" Watch \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list item\",\n      onClick: e => openSideBarModal(e, 'checkList'),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-calendar-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 96\n      }, this), \" Checklist \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), whichSideBarModalOpen === 'checkList' && /*#__PURE__*/_jsxDEV(CheckListModal, {\n      sideBarModalRef: sideBarModalRef,\n      addCheckList: addCheckList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete item\",\n      onClick: props.removeCard,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-trash-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 69\n      }, this), \" Delete Card \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardSideBar, \"7KrFRdRxN55JbUByORy2b/Q7F1Y=\");\n\n_c = CardSideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardSideBar\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CardSideBar/CardSideBar.jsx"],"names":["useRef","useState","LabelsModal","CheckListModal","utilService","CardSideBar","props","whichSideBarModalOpen","setWhichSideBarModalOpen","sideBarModalRef","openSideBarModal","e","value","updateLabelsCard","newList","list","cards","cardToSave","id","color","includes","dispatch","saveList","watchCard","isWatch","addCheckList","title","checkList","makeId","tasks","checkLists","push","removeCard"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAO,oBAAP;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,qBAAD,EAAuBC,wBAAvB,IAAmDP,QAAQ,CAAC,EAAD,CAAjE;AACA,QAAMQ,eAAe,GAAGT,MAAM,CAAC,IAAD,CAA9B;;AAEA,QAAMU,gBAAgB,GAAG,CAACC,CAAD,EAAGC,KAAH,KAAa;AAClCJ,IAAAA,wBAAwB,CAACI,KAAD,CAAxB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,CAACF,CAAD,EAAGC,KAAH,KAAa;AAClC,UAAME,OAAO,GAAG,EAAC,GAAGR,KAAK,CAACS;AAAV,KAAhB;AACA,UAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;;AACA,QAAG,CAACA,KAAK,CAACC,UAAU,CAACC,EAAZ,CAAL,CAAqBC,KAArB,CAA2BC,QAA3B,CAAoCR,KAApC,CAAJ,EAA+C;AAC3CI,MAAAA,KAAK,CAACC,UAAU,CAACC,EAAZ,CAAL,CAAqBC,KAArB,GAA6B,CAAC,GAAGH,KAAK,CAACC,UAAU,CAACC,EAAZ,CAAL,CAAqBC,KAAzB,EAAgCP,KAAhC,CAA7B;AACH;;AAEDS,IAAAA,QAAQ,CAACC,QAAQ,CAACR,OAAD,CAAT,CAAR;AACH,GARD;;AAUC,QAAMS,SAAS,GAAIZ,CAAD,IAAO;AACtB,UAAMG,OAAO,GAAG,EAAC,GAAGR,KAAK,CAACS;AAAV,KAAhB;AACA,UAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;AACAA,IAAAA,KAAK,CAACC,UAAU,CAACC,EAAZ,CAAL,CAAqBM,OAArB,GAA+B,CAACR,KAAK,CAACC,UAAU,CAACC,EAAZ,CAAL,CAAqBM,OAArD;AACAH,IAAAA,QAAQ,CAACC,QAAQ,CAACR,OAAD,CAAT,CAAR;AACH,GALA;;AAOD,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMZ,OAAO,GAAG,EAAC,GAAGR,KAAK,CAACS;AAAV,KAAhB;AACA,UAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;AACA,UAAMW,SAAS,GAAG;AACdT,MAAAA,EAAE,EAACd,WAAW,CAACwB,MAAZ,EADW;AAEdF,MAAAA,KAFc;AAGdG,MAAAA,KAAK,EAAC;AAHQ,KAAlB;AAKAb,IAAAA,KAAK,CAACC,UAAU,CAACC,EAAZ,CAAL,CAAqBY,UAArB,CAAgCC,IAAhC,CAAqCJ,SAArC;AACAN,IAAAA,QAAQ,CAACC,QAAQ,CAACR,OAAD,CAAT,CAAR;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAIH,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAG,QAAH,CAA9D;AAAA,8BAA6E;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKJ,qBAAqB,KAAK,QAA1B,iBAAsC,QAAC,WAAD;AAAa,MAAA,eAAe,EAAEE,eAA9B;AAAgD,MAAA,gBAAgB,EAAEI;AAAlE;AAAA;AAAA;AAAA;AAAA,YAH3C,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAEU,SAArC;AAAA,8BAAgD;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAIZ,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAG,WAAH,CAAjE;AAAA,8BAAmF;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAnF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKJ,qBAAqB,KAAK,WAA1B,iBAAyC,QAAC,cAAD;AAAgB,MAAA,eAAe,EAAEE,eAAjC;AAAkD,MAAA,YAAY,EAAEgB;AAAhE;AAAA;AAAA;AAAA;AAAA,YAN9C,eAOI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAEnB,KAAK,CAAC0B,UAA5C;AAAA,8BAAwD;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhDM;;GAAM3B,W;;KAAAA,W","sourcesContent":["import { useRef, useState } from 'react';\nimport { LabelsModal } from '../LabelsModal';\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\nimport { utilService } from '../../services/util.service';\nimport './CardSideBar.scss'\n\nexport const CardSideBar = (props) => {\n    const [whichSideBarModalOpen,setWhichSideBarModalOpen] = useState('');\n    const sideBarModalRef = useRef(null);\n\n    const openSideBarModal = (e,value) => {\n        setWhichSideBarModalOpen(value)\n    }\n\n    const updateLabelsCard = (e,value) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        if(!cards[cardToSave.id].color.includes(value)){\n            cards[cardToSave.id].color = [...cards[cardToSave.id].color, value]\n        }\n\n        dispatch(saveList(newList))\n    }\n\n     const watchCard = (e) => {\n        const newList = {...props.list};\n        const cards = newList.cards\n        cards[cardToSave.id].isWatch = !cards[cardToSave.id].isWatch\n        dispatch(saveList(newList))\n    }\n\n    const addCheckList = (title) => {\n        const newList = {...props.list};\n        const cards = newList.cards;\n        const checkList = {\n            id:utilService.makeId(),\n            title,\n            tasks:[]\n        }\n        cards[cardToSave.id].checkLists.push(checkList);\n        dispatch(saveList(newList))\n    }\n\n    return (\n        <div className=\"side-bar\">\n            <header className=\"side-bar-title\">ADD TO CARD</header>\n            <div className=\"labels item\" onClick={((e) => openSideBarModal(e,'labels'))}><i className=\"fas fa-tag\"></i> labels </div>\n            {whichSideBarModalOpen === 'labels' && <LabelsModal sideBarModalRef={sideBarModalRef}  updateLabelsCard={updateLabelsCard} />}\n            <div className=\"watch item\" onClick={watchCard}><i className=\"far fa-eye\"></i> Watch </div>\n            <div className=\"todo-list item\" onClick={((e) => openSideBarModal(e,'checkList'))}><i className=\"far fa-calendar-check\"></i> Checklist </div>\n            {whichSideBarModalOpen === 'checkList' && <CheckListModal sideBarModalRef={sideBarModalRef} addCheckList={addCheckList} />}\n            <div className=\"delete item\" onClick={props.removeCard}><i className=\"far fa-trash-alt\"></i> Delete Card </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}