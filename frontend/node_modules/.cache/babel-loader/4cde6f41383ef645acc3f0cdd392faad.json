{"ast":null,"code":"import { listService } from '../../services/list.service'; // Thunk - Action Dispatcher\n\nexport function loadLists(filterBy) {\n  return async dispatch => {\n    const lists = await listService.query(filterBy);\n    const action = {\n      type: 'SET_LISTS',\n      lists\n    };\n    dispatch(action);\n  };\n}\nexport function getListById(listId) {\n  return async dispatch => {\n    const list = await listService.getListById(listId);\n    dispatch({\n      type: 'SET_LIST',\n      list\n    });\n  };\n}\nexport function saveList(list) {\n  return async dispatch => {\n    const isAdd = !list._id;\n    const updatedList = await listService.save(list);\n    if (isAdd) dispatch({\n      type: 'ADD_LIST',\n      list: updatedList\n    });else dispatch({\n      type: 'UPDATE_LIST',\n      updatedList\n    });\n  };\n}\nexport function removeList(listId) {\n  return async dispatch => {\n    await listService.remove(listId);\n    dispatch({\n      type: 'REMOVE_LIST',\n      listId\n    });\n  };\n}","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/store/actions/ListActions.js"],"names":["listService","loadLists","filterBy","dispatch","lists","query","action","type","getListById","listId","list","saveList","isAdd","_id","updatedList","save","removeList","remove"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B,C,CAEA;;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMJ,WAAW,CAACK,KAAZ,CAAkBH,QAAlB,CAApB;AACA,UAAMI,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAE,WADO;AAEbH,MAAAA;AAFa,KAAf;AAIAD,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,GAPD;AAQD;AAED,OAAO,SAASE,WAAT,CAAqBC,MAArB,EAA6B;AAClC,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMO,IAAI,GAAG,MAAMV,WAAW,CAACQ,WAAZ,CAAwBC,MAAxB,CAAnB;AACAN,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,UAAR;AAAoBG,MAAAA;AAApB,KAAD,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASC,QAAT,CAAkBD,IAAlB,EAAwB;AAC7B,SAAO,MAAMP,QAAN,IAAkB;AACvB,UAAMS,KAAK,GAAG,CAACF,IAAI,CAACG,GAApB;AACA,UAAMC,WAAW,GAAG,MAAMd,WAAW,CAACe,IAAZ,CAAiBL,IAAjB,CAA1B;AAEA,QAAIE,KAAJ,EAAWT,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,UAAR;AAAoBG,MAAAA,IAAI,EAAEI;AAA1B,KAAD,CAAR,CAAX,KACKX,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,aAAR;AAAuBO,MAAAA;AAAvB,KAAD,CAAR;AACN,GAND;AAOD;AAED,OAAO,SAASE,UAAT,CAAoBP,MAApB,EAA4B;AACjC,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMH,WAAW,CAACiB,MAAZ,CAAmBR,MAAnB,CAAN;AACAN,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA;AAAvB,KAAD,CAAR;AACD,GAHD;AAID","sourcesContent":["import { listService } from '../../services/list.service'\r\n\r\n// Thunk - Action Dispatcher\r\nexport function loadLists(filterBy) {\r\n  return async dispatch => {\r\n    const lists = await listService.query(filterBy);\r\n    const action = {\r\n      type: 'SET_LISTS',\r\n      lists\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\nexport function getListById(listId) {\r\n  return async dispatch => {\r\n    const list = await listService.getListById(listId)\r\n    dispatch({ type: 'SET_LIST', list })\r\n  }\r\n}\r\n\r\nexport function saveList(list) {\r\n  return async dispatch => {\r\n    const isAdd = !list._id\r\n    const updatedList = await listService.save(list)\r\n\r\n    if (isAdd) dispatch({ type: 'ADD_LIST', list: updatedList })\r\n    else dispatch({ type: 'UPDATE_LIST', updatedList })\r\n  }\r\n}\r\n\r\nexport function removeList(listId) {\r\n  return async dispatch => {\r\n    await listService.remove(listId)\r\n    dispatch({ type: 'REMOVE_LIST', listId })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}