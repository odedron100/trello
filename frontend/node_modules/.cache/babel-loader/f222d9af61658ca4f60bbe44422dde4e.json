{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/HelpersModal/HelpersModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { removeList } from '../../store/actions/ListActions';\nimport { useDispatch } from 'react-redux';\nimport './HelpersModal.scss';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HelpersModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const helperModalRef = useRef(null);\n  const handleDocumentClick = useCallback(e => {\n    console.log('e', e);\n\n    if (e.path[0] === props.helperModalRef.current || e.path[1] === props.helperModalRef.current || e.path[2] === props.helperModalRef.current || e.target === props.helperModalRef.current) {\n      return;\n    }\n\n    if (props.isOpenHelpersModal) {\n      props.setIsOpenHelpersModal(false);\n    } // if (!formContainerRef.current.contains(e.target)) {\n    //     setIsItemFormOpen(false);\n    // }\n\n  }, [helperModalRef]);\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const onRemoveList = () => {\n    dispatch(removeList(props.list._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"helpers-modal\",\n    ref: helperModalRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-helpers-header\",\n      children: \"List Helpers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remove-list item\",\n      onClick: onRemoveList,\n      children: \"Remove list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n};\n\n_s(HelpersModal, \"p+GEbpuJZIxSMjbCqmxVSvEKxFo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = HelpersModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelpersModal\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/HelpersModal/HelpersModal.jsx"],"names":["removeList","useDispatch","useCallback","useEffect","useRef","HelpersModal","props","dispatch","helperModalRef","handleDocumentClick","e","console","log","path","current","target","isOpenHelpersModal","setIsOpenHelpersModal","document","addEventListener","removeEventListener","onRemoveList","list","_id"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,iCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,qBAAP;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,cAAc,GAAGJ,MAAM,CAAC,IAAD,CAA7B;AAEC,QAAMK,mBAAmB,GAAGP,WAAW,CAAEQ,CAAD,IAAO;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,CAAjB;;AACD,QAAIA,CAAC,CAACG,IAAF,CAAO,CAAP,MAAcP,KAAK,CAACE,cAAN,CAAqBM,OAAnC,IACGJ,CAAC,CAACG,IAAF,CAAO,CAAP,MAAcP,KAAK,CAACE,cAAN,CAAqBM,OADtC,IAEGJ,CAAC,CAACG,IAAF,CAAO,CAAP,MAAcP,KAAK,CAACE,cAAN,CAAqBM,OAFtC,IAGGJ,CAAC,CAACK,MAAF,KAAaT,KAAK,CAACE,cAAN,CAAqBM,OAHzC,EAGkD;AAC9C;AACH;;AAED,QAAIR,KAAK,CAACU,kBAAV,EAA8B;AAC1BV,MAAAA,KAAK,CAACW,qBAAN,CAA4B,KAA5B;AACH,KAX2C,CAa5C;AACA;AACA;;AACH,GAhBuC,EAgBrC,CAACT,cAAD,CAhBqC,CAAvC;AAkBDL,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCV,mBAAnC;AACA,WAAO,MAAM;AACTS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCX,mBAAtC;AACH,KAFD;AAGH,GALQ,CAAT;;AAOA,QAAMY,YAAY,GAAG,MAAM;AACvBd,IAAAA,QAAQ,CAACP,UAAU,CAACM,KAAK,CAACgB,IAAN,CAAWC,GAAZ,CAAX,CAAR;AACH,GAFD;;AAIA,sBACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEf,cAApC;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAEa,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CAvCM;;GAAMhB,Y;UACQJ,W;;;KADRI,Y","sourcesContent":["import {removeList} from '../../store/actions/ListActions'\nimport { useDispatch } from 'react-redux';\nimport './HelpersModal.scss'\nimport { useCallback, useEffect, useRef } from 'react';\n\nexport const HelpersModal = (props) => {\n    const dispatch = useDispatch();\n    const helperModalRef = useRef(null);\n\n     const handleDocumentClick = useCallback((e) => {\n         console.log('e', e);\n        if (e.path[0] === props.helperModalRef.current\n            || e.path[1] === props.helperModalRef.current\n            || e.path[2] === props.helperModalRef.current\n            || e.target === props.helperModalRef.current) {\n            return;\n        }\n\n        if (props.isOpenHelpersModal) {\n            props.setIsOpenHelpersModal(false)\n        }\n\n        // if (!formContainerRef.current.contains(e.target)) {\n        //     setIsItemFormOpen(false);\n        // }\n    }, [helperModalRef]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        }\n    });\n\n    const onRemoveList = () => {\n        dispatch(removeList(props.list._id))\n    }\n\n    return (\n       <div className=\"helpers-modal\" ref={helperModalRef}>\n            <div className=\"modal-helpers-header\">List Helpers...</div>\n            <div className=\"remove-list item\" onClick={onRemoveList}>Remove list</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}