{"ast":null,"code":"const INITIAL_STATE = {\n  boards: {},\n  currBoard: null\n};\nexport function BoardReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'SET_BOARDS':\n      return { ...state,\n        boards: { ...action.boards\n        }\n      };\n\n    case 'SET_BOARD':\n      console.log('action.board', action.board);\n      return { ...state,\n        currBoard: action.board\n      };\n\n    case 'ADD_BOARD':\n      return { ...state,\n        boards: { ...state.boards,\n          [action.board._id]: { ...action.board\n          }\n        }\n      };\n\n    case 'REMOVE_BOARD':\n      const newBoardsObject = { ...state.boards\n      };\n      Reflect.deleteProperty(newBoardsObject, action.boardId);\n      return { ...state,\n        boards: newBoardsObject\n      };\n\n    case 'UPDATE_BOARD':\n      const {\n        updatedBoard\n      } = action;\n      return { ...state,\n        // baords: state.baords.map(baord => baord._id === updatedBaord._id ? updatedbaord : baord)\n        baords: { ...state.baords,\n          [updatedBoard._id]: { ...updatedBoard\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n_c = BoardReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardReducer\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/store/reducers/BoardReducer.js"],"names":["INITIAL_STATE","boards","currBoard","BoardReducer","state","action","type","console","log","board","_id","newBoardsObject","Reflect","deleteProperty","boardId","updatedBoard","baords"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAKA,OAAO,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,aAA9B,EAA6CK,MAA7C,EAAqD;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,MAAM,EAAE,EAAE,GAAGI,MAAM,CAACJ;AAAZ;AAFH,OAAP;;AAIF,SAAK,WAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAAM,CAACI,KAAnC;AACA,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,SAAS,EAAEG,MAAM,CAACI;AAFb,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,MAAM,EAAE,EAAE,GAAGG,KAAK,CAACH,MAAX;AAAmB,WAACI,MAAM,CAACI,KAAP,CAAaC,GAAd,GAAoB,EAAE,GAAGL,MAAM,CAACI;AAAZ;AAAvC;AAFH,OAAP;;AAIF,SAAK,cAAL;AACE,YAAME,eAAe,GAAG,EAAE,GAAGP,KAAK,CAACH;AAAX,OAAxB;AACAW,MAAAA,OAAO,CAACC,cAAR,CAAuBF,eAAvB,EAAwCN,MAAM,CAACS,OAA/C;AAEA,aAAO,EACL,GAAGV,KADE;AAELH,QAAAA,MAAM,EAAEU;AAFH,OAAP;;AAIF,SAAK,cAAL;AACE,YAAM;AAAEI,QAAAA;AAAF,UAAmBV,MAAzB;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACAY,QAAAA,MAAM,EAAE,EAAE,GAAGZ,KAAK,CAACY,MAAX;AAAmB,WAACD,YAAY,CAACL,GAAd,GAAoB,EAAE,GAAGK;AAAL;AAAvC;AAHH,OAAP;;AAKF;AACE,aAAOX,KAAP;AAjCJ;AAmCD;KApCeD,Y","sourcesContent":["const INITIAL_STATE = {\r\n  boards: {},\r\n  currBoard: null,\r\n}\r\n\r\nexport function BoardReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return {\r\n        ...state,\r\n        boards: { ...action.boards }\r\n      }\r\n    case 'SET_BOARD':\r\n      console.log('action.board', action.board);\r\n      return {\r\n        ...state,\r\n        currBoard: action.board\r\n      }\r\n    case 'ADD_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: { ...state.boards, [action.board._id]: { ...action.board } }\r\n      }\r\n    case 'REMOVE_BOARD':\r\n      const newBoardsObject = { ...state.boards };\r\n      Reflect.deleteProperty(newBoardsObject, action.boardId);\r\n\r\n      return {\r\n        ...state,\r\n        boards: newBoardsObject\r\n      }\r\n    case 'UPDATE_BOARD':\r\n      const { updatedBoard } = action\r\n      return {\r\n        ...state,\r\n        // baords: state.baords.map(baord => baord._id === updatedBaord._id ? updatedbaord : baord)\r\n        baords: { ...state.baords, [updatedBoard._id]: { ...updatedBoard } }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}