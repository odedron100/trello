{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CheckLists/CheckLists.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { TasksList } from '../TasksList/TasksList';\nimport './CheckLists.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckLists = props => {\n  _s();\n\n  const [isAddTaskModalOpen, setIsAddTaskModalOpen] = useState(false);\n  const addTaskModalRef = useRef(null);\n  useEffect(() => {\n    taskCompletionRate();\n    return () => {};\n  }); //  const handleDocumentClick = useCallback((e) => {\n  //      console.log('e.path[0]', e.path[0] === addTaskModalRef.current);\n  //      console.log('e.path[1]', e.path[1] === addTaskModalRef.current);\n  //      console.log('e.target', e.target === addTaskModalRef.current);\n  //     if ( e.target === addTaskModalRef.current) {\n  //         return;\n  //     }\n  //     else{\n  //         setIsAddTaskModalOpen(false)\n  //     }\n  // }, [addTaskModalRef]);\n  // useEffect(() => {\n  //     document.addEventListener('click', handleDocumentClick);\n  //     return () => {\n  //         document.removeEventListener('click', handleDocumentClick);\n  //     }\n  // });\n\n  const openAddTaskModal = () => {\n    setIsAddTaskModalOpen(true);\n  };\n\n  const taskCompletionRate = () => {\n    const tasks = props.checkList.tasks;\n    let sum = 0;\n    let numberOfTasks = 0;\n\n    if (Object.keys(tasks).length > 0) {\n      Object.keys(tasks).forEach(taskId => {\n        numberOfTasks++;\n\n        if (tasks[taskId].isDone) {\n          sum++;\n        }\n      });\n      const width = Math.floor(sum / numberOfTasks * 100) + '%';\n      return width;\n    } else {\n      return 0 + '%';\n    }\n  };\n\n  const onRemoveCheckList = () => {\n    props.removeCheckList(props.checkList.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkLists-container item-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkList\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-calendar-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 49\n        }, this), \" \", props.checkList.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-checkList\",\n        onClick: onRemoveCheckList,\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-list-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage\",\n        children: [\" \", taskCompletionRate()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"done-tasks-graph\",\n          style: {\n            width: taskCompletionRate()\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      checkList: props.checkList,\n      updateTaskDone: props.updateTaskDone,\n      taskCompletionRate: props.taskCompletionRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: !isAddTaskModalOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-modal-button\",\n        onClick: openAddTaskModal,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task-modal\",\n        ref: addTaskModalRef,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Add new task...\",\n          value: props.newTaskTitleToAdd,\n          onChange: props.updateNewTaskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-task-button submit-button-trello\",\n          onClick: e => props.addTaskToCheckList(e, props.checkList.id),\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CheckLists, \"e0LDjiIZ8gB72NOi4h3yfnD1bP8=\");\n\n_c = CheckLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckLists\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CheckLists/CheckLists.jsx"],"names":["useEffect","useRef","useState","TasksList","CheckLists","props","isAddTaskModalOpen","setIsAddTaskModalOpen","addTaskModalRef","taskCompletionRate","openAddTaskModal","tasks","checkList","sum","numberOfTasks","Object","keys","length","forEach","taskId","isDone","width","Math","floor","onRemoveCheckList","removeCheckList","id","title","updateTaskDone","newTaskTitleToAdd","updateNewTaskTitle","e","addTaskToCheckList"],"mappings":"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","sourcesContent":["\n\nimport { useEffect, useRef, useState } from 'react';\nimport { TasksList } from '../TasksList/TasksList'\nimport './CheckLists.scss'\n\nexport const CheckLists = (props) => {\n    const [isAddTaskModalOpen,setIsAddTaskModalOpen] = useState(false)\n    const addTaskModalRef = useRef(null);\n\n    useEffect(() => {\n        taskCompletionRate();\n        return () => {\n\n        }\n    });\n\n    //  const handleDocumentClick = useCallback((e) => {\n    //      console.log('e.path[0]', e.path[0] === addTaskModalRef.current);\n    //      console.log('e.path[1]', e.path[1] === addTaskModalRef.current);\n    //      console.log('e.target', e.target === addTaskModalRef.current);\n    //     if ( e.target === addTaskModalRef.current) {\n    //         return;\n    //     }\n    //     else{\n    //         setIsAddTaskModalOpen(false)\n    //     }\n    // }, [addTaskModalRef]);\n\n    // useEffect(() => {\n    //     document.addEventListener('click', handleDocumentClick);\n    //     return () => {\n    //         document.removeEventListener('click', handleDocumentClick);\n    //     }\n    // });\n\n    const openAddTaskModal = () => {\n        setIsAddTaskModalOpen(true);\n    }\n\n    const taskCompletionRate = () => {\n        const tasks = props.checkList.tasks;\n        let sum = 0;\n        let numberOfTasks = 0;\n        if(Object.keys(tasks).length > 0){\n            Object.keys(tasks).forEach(taskId => {\n                numberOfTasks++\n                if(tasks[taskId].isDone) {\n                    sum ++\n                }\n            });\n            const width = Math.floor((sum / numberOfTasks * 100)) + '%';\n            return width\n        }else{\n            return 0 + '%';\n        }\n    }\n\n    const onRemoveCheckList = () => {\n        props.removeCheckList(props.checkList.id)\n    }\n\n    return (\n            <div className=\"checkLists-container item-container\" >\n                <header>\n                    <label htmlFor=\"checkList\"> <span> <i className=\"far fa-calendar-check\"></i></span> {props.checkList.title}</label>\n                    <button className=\"delete-checkList\" onClick={onRemoveCheckList}>DELETE</button>\n                </header>\n                <div className=\"check-list-result\">\n                    <div className=\"percentage\"> {taskCompletionRate()}</div>\n                    <div className=\"graph\">\n                        <div className=\"done-tasks-graph\" style={{width:taskCompletionRate()}}></div>\n                    </div>\n                </div>\n                <TasksList checkList={props.checkList} updateTaskDone={props.updateTaskDone} taskCompletionRate={props.taskCompletionRate} />\n                <div className=\"add-task\">\n                    {!isAddTaskModalOpen ? <button className=\"add-task-modal-button\" onClick={openAddTaskModal}>Add task</button>\n                    :\n                    <div className=\"add-task-modal\" ref={addTaskModalRef}>\n                        <textarea type=\"text\" placeholder=\"Add new task...\" value={props.newTaskTitleToAdd} onChange={props.updateNewTaskTitle}/>\n                        <button className=\"add-task-button submit-button-trello\" onClick={((e) => props.addTaskToCheckList(e,props.checkList.id))}>Add task</button>\n                    </div>}\n                </div>\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}