{"ast":null,"code":"import { boardService } from '../../services/board.service'; // Thunk - Action Dispatcher\n\nexport function loadBoards(filterBy) {\n  return async dispatch => {\n    const boards = await boardService.query(filterBy);\n    const action = {\n      type: 'SET_BOARDS',\n      boards\n    };\n    dispatch(action);\n  };\n}\nexport function getBoardById(boardId) {\n  return async dispatch => {\n    const board = await boardService.getById(boardId);\n    dispatch({\n      type: 'SET_BOARD',\n      board\n    });\n  };\n}\nexport function saveBoard(board) {\n  return async dispatch => {\n    const isAdd = !board._id;\n    const updatedBoard = await boardService.save(board);\n    if (isAdd) dispatch({\n      type: 'ADD_BOARD',\n      board: updatedBoard\n    });else dispatch({\n      type: 'UPDATE_BOARD',\n      updatedBoard\n    });\n  };\n}\nexport function removeboard(boardId) {\n  return async dispatch => {\n    await boardService.remove(boardId);\n    dispatch({\n      type: 'REMOVE_BOARD',\n      boardId\n    });\n  };\n}","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/store/actions/BoardActions.js"],"names":["boardService","loadBoards","filterBy","dispatch","boards","query","action","type","getBoardById","boardId","board","getById","saveBoard","isAdd","_id","updatedBoard","save","removeboard","remove"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B,C,CAEA;;AACA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AACnC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,MAAM,GAAG,MAAMJ,YAAY,CAACK,KAAb,CAAmBH,QAAnB,CAArB;AACA,UAAMI,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAE,YADO;AAEbH,MAAAA;AAFa,KAAf;AAIAD,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,GAPD;AAQD;AAED,OAAO,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMO,KAAK,GAAG,MAAMV,YAAY,CAACW,OAAb,CAAqBF,OAArB,CAApB;AACAN,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,WAAR;AAAqBG,MAAAA;AAArB,KAAD,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AAC/B,SAAO,MAAMP,QAAN,IAAkB;AACvB,UAAMU,KAAK,GAAG,CAACH,KAAK,CAACI,GAArB;AACA,UAAMC,YAAY,GAAG,MAAMf,YAAY,CAACgB,IAAb,CAAkBN,KAAlB,CAA3B;AAEA,QAAIG,KAAJ,EAAWV,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,WAAR;AAAqBG,MAAAA,KAAK,EAAEK;AAA5B,KAAD,CAAR,CAAX,KACKZ,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,cAAR;AAAwBQ,MAAAA;AAAxB,KAAD,CAAR;AACN,GAND;AAOD;AAED,OAAO,SAASE,WAAT,CAAqBR,OAArB,EAA8B;AACnC,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMH,YAAY,CAACkB,MAAb,CAAoBT,OAApB,CAAN;AACAN,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,cAAR;AAAwBE,MAAAA;AAAxB,KAAD,CAAR;AACD,GAHD;AAID","sourcesContent":["import { boardService } from '../../services/board.service'\r\n\r\n// Thunk - Action Dispatcher\r\nexport function loadBoards(filterBy) {\r\n  return async dispatch => {\r\n    const boards = await boardService.query(filterBy);\r\n    const action = {\r\n      type: 'SET_BOARDS',\r\n      boards\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\nexport function getBoardById(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getById(boardId)\r\n    dispatch({ type: 'SET_BOARD', board })\r\n  }\r\n}\r\n\r\nexport function saveBoard(board) {\r\n  return async dispatch => {\r\n    const isAdd = !board._id\r\n    const updatedBoard = await boardService.save(board)\r\n\r\n    if (isAdd) dispatch({ type: 'ADD_BOARD', board: updatedBoard })\r\n    else dispatch({ type: 'UPDATE_BOARD', updatedBoard })\r\n  }\r\n}\r\n\r\nexport function removeboard(boardId) {\r\n  return async dispatch => {\r\n    await boardService.remove(boardId)\r\n    dispatch({ type: 'REMOVE_BOARD', boardId })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}