{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CheckLists/CheckLists.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { TasksList } from '../TasksList/TasksList';\nimport './CheckLists.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckLists = props => {\n  _s();\n\n  const [isAddTaskModalOpen, setIsAddTaskModalOpen] = useState(false);\n  const addTaskModalRef = useRef(null);\n  useEffect(() => {\n    taskCompletionRate();\n    return () => {};\n  });\n  const handleDocumentClick = useCallback(e => {\n    if (e.target === addTaskModalRef.current) {\n      return;\n    } // if (!formContainerRef.current || !isItemFormOpen) {\n    //     return;\n    // }\n\n\n    if (!addTaskModalRef.current.contains(e.target)) {\n      setIsAddTaskModalOpen(false);\n    }\n  }, [addTaskModalRef]);\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const toggleAddTaskModal = () => {\n    setIsAddTaskModalOpen(!isAddTaskModalOpen);\n  };\n\n  const taskCompletionRate = () => {\n    const tasks = props.checkList.tasks; //   Object.keys(tasks).reduce((acc, taskId) => {\n    //     if(tasks[taskId].isDone) {\n    //         acc ++;\n    //     }\n    //     console.log(acc)\n    //   }, 0);\n\n    let sum = 0;\n    let numberOfTasks = 0;\n\n    if (Object.keys(tasks).length > 0) {\n      Object.keys(tasks).forEach(taskId => {\n        numberOfTasks++;\n\n        if (tasks[taskId].isDone) {\n          sum++;\n        }\n      });\n      const width = Math.floor(sum / numberOfTasks * 100) + '%';\n      return width;\n    } else {\n      return 0 + '%';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkLists-container item-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkList\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-calendar-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }, this), \" \", props.checkList.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-checkList\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-list-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage\",\n        children: [\" \", taskCompletionRate()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"done-tasks-graph\",\n          style: {\n            width: taskCompletionRate()\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      checkList: props.checkList,\n      updateTaskDone: props.updateTaskDone,\n      taskCompletionRate: props.taskCompletionRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: !isAddTaskModalOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-modal-button\",\n        onClick: toggleAddTaskModal,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Add new task...\",\n          value: props.newTaskTitleToAdd,\n          onChange: props.updateNewTaskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-task-button submit-button-trello\",\n          onClick: e => props.addTaskToCheckList(e, props.checkList.id),\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CheckLists, \"QmNtA+ZvFAJTFNtkpOlF407iOos=\");\n\n_c = CheckLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckLists\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/CheckLists/CheckLists.jsx"],"names":["useEffect","useState","TasksList","CheckLists","props","isAddTaskModalOpen","setIsAddTaskModalOpen","addTaskModalRef","useRef","taskCompletionRate","handleDocumentClick","useCallback","e","target","current","contains","document","addEventListener","removeEventListener","toggleAddTaskModal","tasks","checkList","sum","numberOfTasks","Object","keys","length","forEach","taskId","isDone","width","Math","floor","title","updateTaskDone","newTaskTitleToAdd","updateNewTaskTitle","addTaskToCheckList","id"],"mappings":"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","sourcesContent":["\n\nimport { useEffect, useState } from 'react';\nimport { TasksList } from '../TasksList/TasksList'\nimport './CheckLists.scss'\n\nexport const CheckLists = (props) => {\n    const [isAddTaskModalOpen,setIsAddTaskModalOpen] = useState(false)\n    const addTaskModalRef = useRef(null);\n\n    useEffect(() => {\n        taskCompletionRate();\n        return () => {\n\n        }\n    });\n\n     const handleDocumentClick = useCallback((e) => {\n        if (e.target === addTaskModalRef.current) {\n            return;\n        }\n\n        // if (!formContainerRef.current || !isItemFormOpen) {\n        //     return;\n        // }\n\n        if (!addTaskModalRef.current.contains(e.target)) {\n            setIsAddTaskModalOpen(false);\n        }\n    }, [addTaskModalRef]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        }\n    });\n\n    const toggleAddTaskModal = () => {\n        setIsAddTaskModalOpen(!isAddTaskModalOpen);\n    }\n\n    const taskCompletionRate = () => {\n        const tasks = props.checkList.tasks;\n        //   Object.keys(tasks).reduce((acc, taskId) => {\n        //     if(tasks[taskId].isDone) {\n        //         acc ++;\n        //     }\n        //     console.log(acc)\n        //   }, 0);\n        let sum = 0;\n        let numberOfTasks = 0;\n        if(Object.keys(tasks).length > 0){\n            Object.keys(tasks).forEach(taskId => {\n                numberOfTasks++\n                if(tasks[taskId].isDone) {\n                    sum ++\n                }\n            });\n            const width = Math.floor((sum / numberOfTasks * 100)) + '%';\n            return width\n        }else{\n            return 0 + '%';\n        }\n    }\n\n    return (\n            <div className=\"checkLists-container item-container\">\n                <header>\n                    <label htmlFor=\"checkList\"> <span> <i className=\"far fa-calendar-check\"></i></span> {props.checkList.title}</label>\n                    <button className=\"delete-checkList\">DELETE</button>\n                </header>\n                <div className=\"check-list-result\">\n                    <div className=\"percentage\"> {taskCompletionRate()}</div>\n                    <div className=\"graph\">\n                        <div className=\"done-tasks-graph\" style={{width:taskCompletionRate()}}></div>\n                    </div>\n                </div>\n                <TasksList checkList={props.checkList} updateTaskDone={props.updateTaskDone} taskCompletionRate={props.taskCompletionRate} />\n                <div className=\"add-task\">\n                    {!isAddTaskModalOpen ? <button className=\"add-task-modal-button\" onClick={toggleAddTaskModal}>Add task</button>\n                    :\n                    <div className=\"add-task-modal\">\n                        <textarea type=\"text\" placeholder=\"Add new task...\" value={props.newTaskTitleToAdd} onChange={props.updateNewTaskTitle}/>\n                        <button className=\"add-task-button submit-button-trello\" onClick={((e) => props.addTaskToCheckList(e,props.checkList.id))}>Add task</button>\n                    </div>}\n                </div>\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}