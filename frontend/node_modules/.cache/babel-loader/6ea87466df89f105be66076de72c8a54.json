{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport './List.scss';\nimport { utilService } from '../../services/util.service';\nimport { useEffect, useState, useRef } from 'react';\nimport { FormButton } from '../FormButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveBoard, loadBoards } from '../../store/actions/BoardActions';\nimport { CardModal } from '../CardModal/CardModal';\nimport { CardList } from '../CardList/CardList';\nimport { HelpersModal } from '../HelpersModal/HelpersModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = ({\n  list\n}) => {\n  _s();\n\n  const [currCard, setCurrCard] = useState(null);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isOpenHelpersModal, setIsOpenHelpersModal] = useState(false);\n  const [isEditListTitle, setIsEditListTitle] = useState(false);\n  const [newListTitle, setNewListTitle] = useState(list.title);\n  const editRef = useRef(null);\n  const board = useSelector(state => state.BoardReducer.currBoard);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadBoards());\n  }, []);\n  document.addEventListener('keydown', e => {\n    if (isEditListTitle && e.keyCode === 13) {\n      updateListTitle();\n      setIsEditListTitle(false);\n    }\n  });\n\n  const handleNewCardSubmit = newItem => {\n    const cardId = utilService.makeId();\n    const newCard = {\n      id: cardId,\n      title: newItem.title,\n      description: '',\n      color: [],\n      isWatch: false,\n      currList: list._id,\n      checkLists: []\n    };\n    let boardToSave = [...board, { ...list,\n      cards: { ...list.cards,\n        [cardId]: newCard\n      }\n    }];\n    dispatch(saveBoard(boardToSave));\n  };\n\n  const openModal = (e, card) => {\n    if (e.target === editRef.current) return;\n    setIsOpenModal(true);\n    setCurrCard(card);\n  };\n\n  const openHelpersModal = () => {\n    setIsOpenHelpersModal(true);\n  };\n\n  const setEditListTitle = () => {\n    setIsEditListTitle(true);\n  };\n\n  const editListTitle = e => {\n    setNewListTitle(e.target.value);\n  };\n\n  const updateListTitle = () => {\n    const newList = { ...list,\n      title: newListTitle\n    };\n    dispatch(saveBoard(newList));\n  };\n\n  const cards = list.cards;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [isEditListTitle ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-title\",\n        type: \"text\",\n        value: newListTitle,\n        onChange: editListTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        onClick: setEditListTitle,\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helpers\",\n        onClick: openHelpersModal,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-ellipsis-h\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), isOpenHelpersModal && /*#__PURE__*/_jsxDEV(HelpersModal, {\n        list: list,\n        setIsOpenModal: setIsOpenModal,\n        setIsOpenHelpersModal: setIsOpenHelpersModal,\n        isOpenHelpersModal: isOpenHelpersModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), cards && /*#__PURE__*/_jsxDEV(CardList, {\n      cards: cards,\n      editRef: editRef,\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n      itemType: \"card\",\n      onSubmit: handleNewCardSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), isOpenModal && /*#__PURE__*/_jsxDEV(CardModal, {\n      card: currCard,\n      list: list,\n      setIsOpenModal: setIsOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"+1nWdaea42syPNafugjxAO3sSr4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/List/List.jsx"],"names":["utilService","useEffect","useState","useRef","FormButton","useDispatch","useSelector","saveBoard","loadBoards","CardModal","CardList","HelpersModal","List","list","currCard","setCurrCard","isOpenModal","setIsOpenModal","isOpenHelpersModal","setIsOpenHelpersModal","isEditListTitle","setIsEditListTitle","newListTitle","setNewListTitle","title","editRef","board","state","BoardReducer","currBoard","dispatch","document","addEventListener","e","keyCode","updateListTitle","handleNewCardSubmit","newItem","cardId","makeId","newCard","id","description","color","isWatch","currList","_id","checkLists","boardToSave","cards","openModal","card","target","current","openHelpersModal","setEditListTitle","editListTitle","value","newList"],"mappings":"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","sourcesContent":["import './List.scss'\nimport {utilService} from '../../services/util.service';\nimport { useEffect,useState,useRef } from 'react';\nimport {FormButton} from '../FormButton'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {saveBoard ,loadBoards} from '../../store/actions/BoardActions'\nimport { CardModal } from '../CardModal/CardModal';\nimport { CardList } from '../CardList/CardList';\nimport { HelpersModal } from '../HelpersModal/HelpersModal';\n\nexport const List = ({list}) => {\n    const [currCard,setCurrCard] = useState(null);\n    const [isOpenModal,setIsOpenModal] = useState(false);\n    const [isOpenHelpersModal,setIsOpenHelpersModal] = useState(false);\n    const [isEditListTitle,setIsEditListTitle] = useState(false);\n    const [newListTitle,setNewListTitle] = useState(list.title);\n    const editRef = useRef(null);\n    const board = useSelector(state => state.BoardReducer.currBoard)\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(loadBoards())\n    }, []);\n\n    document.addEventListener('keydown',(e) => {\n        if(isEditListTitle && e.keyCode === 13){\n            updateListTitle();\n            setIsEditListTitle(false)\n        }\n    })\n\n    const handleNewCardSubmit = (newItem) => {\n        const cardId = utilService.makeId()\n        const newCard = {\n            id:cardId,\n            title: newItem.title,\n            description:'',\n            color:[],\n            isWatch:false,\n            currList: list._id,\n            checkLists:[]\n        }\n        let boardToSave = [...board,{...list,cards:{...list.cards,[cardId]:newCard}}]\n        dispatch(saveBoard(boardToSave))\n    }\n\n    const openModal = (e,card) => {\n        if (e.target === editRef.current) return;\n        setIsOpenModal(true)\n        setCurrCard(card);\n    }\n\n    const openHelpersModal = () => {\n        setIsOpenHelpersModal(true)\n    }\n\n    const setEditListTitle = () => {\n        setIsEditListTitle(true);\n    }\n\n    const editListTitle = (e) => {\n        setNewListTitle(e.target.value);\n    }\n\n    const updateListTitle = () => {\n        const newList = {...list, title:newListTitle}\n        dispatch(saveBoard(newList))\n    }\n\n    const cards = list.cards;\n    return (\n        <section className=\"list\">\n            <header>\n                 {isEditListTitle ? <input className=\"edit-title\" type=\"text\" value={newListTitle} onChange={editListTitle}/>\n                : <div className=\"title\" onClick={setEditListTitle}>{list.title}</div>}\n                <div className=\"helpers\" onClick={openHelpersModal}><i className=\"fas fa-ellipsis-h\"></i></div>\n                {isOpenHelpersModal && <HelpersModal list={list} setIsOpenModal={setIsOpenModal} setIsOpenHelpersModal={setIsOpenHelpersModal} isOpenHelpersModal={isOpenHelpersModal}/>}\n            </header>\n            {cards &&<CardList cards={cards} editRef={editRef} openModal={openModal}/>}\n            <FormButton itemType=\"card\" onSubmit={handleNewCardSubmit}/>\n            {isOpenModal && <CardModal card={currCard} list={list} setIsOpenModal={setIsOpenModal} />}\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}