{"ast":null,"code":"var _jsxFileName = \"/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/FormButton/FormButton.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport './FormButton.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormButton = props => {\n  _s();\n\n  const [isItemFormOpen, setIsItemFormOpen] = useState(false);\n  const [newItemInputValue, setNewItemInputValue] = useState('');\n  const formContainerRef = useRef(null);\n  const openFormButtonRef = useRef(null);\n  const handleDocumentClick = useCallback(e => {\n    if (e.target === openFormButtonRef.current) {\n      return;\n    }\n\n    if (!formContainerRef.current || !isItemFormOpen) {\n      return;\n    }\n\n    if (!formContainerRef.current.contains(e.target)) {\n      setIsItemFormOpen(false);\n    }\n  }, [formContainerRef, isItemFormOpen, openFormButtonRef]);\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const updateItemTitle = e => {\n    setNewItemInputValue(e.target.value);\n  };\n\n  const onSubmit = e => {\n    const newItem = {\n      title: newItemInputValue\n    };\n    props.onSubmit(newItem);\n    setNewItemInputValue('');\n  };\n\n  const dynamicClass = props.itemType;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-button-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dynamicClass,\n      children: isItemFormOpen ? /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"new-item-form\",\n        ref: formContainerRef,\n        children: [dynamicClass === 'list' ? /*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          placeholder: \"Enter item title...\",\n          onChange: updateItemTitle,\n          value: newItemInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          autoFocus: true,\n          type: \"text\",\n          placeholder: \"Enter item title...\",\n          onChange: updateItemTitle,\n          value: newItemInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-item trello-button\",\n            onClick: onSubmit,\n            children: `Add ${props.itemType}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-item\",\n            onClick: toggleItemForm,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 86\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: openFormButtonRef,\n        className: \"create-item-button\",\n        onClick: toggleItemForm,\n        children: [\"+ Add a \", props.itemType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormButton, \"Onn8TLmIXNmzQQl5AIA7x3NSaiY=\");\n\n_c = FormButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormButton\");","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/cmps/FormButton/FormButton.jsx"],"names":["useState","useEffect","useRef","useCallback","FormButton","props","isItemFormOpen","setIsItemFormOpen","newItemInputValue","setNewItemInputValue","formContainerRef","openFormButtonRef","handleDocumentClick","e","target","current","contains","document","addEventListener","removeEventListener","updateItemTitle","value","onSubmit","newItem","title","dynamicClass","itemType","toggleItemForm"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\nimport './FormButton.scss'\n\nexport const FormButton = (props) => {\n\n    const [isItemFormOpen, setIsItemFormOpen] = useState(false);\n    const [newItemInputValue, setNewItemInputValue] = useState('');\n    const formContainerRef = useRef(null);\n    const openFormButtonRef = useRef(null);\n\n\n      const handleDocumentClick = useCallback((e) => {\n        if (e.target === openFormButtonRef.current) {\n            return;\n        }\n\n        if (!formContainerRef.current || !isItemFormOpen) {\n            return;\n        }\n\n        if (!formContainerRef.current.contains(e.target)) {\n            setIsItemFormOpen(false);\n        }\n    }, [formContainerRef, isItemFormOpen, openFormButtonRef]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        }\n    });\n\n    const updateItemTitle = (e) => {\n        setNewItemInputValue(e.target.value);\n    }\n\n    const onSubmit = (e) => {\n        const newItem = {\n            title: newItemInputValue\n        };\n\n        props.onSubmit(newItem);\n        setNewItemInputValue('');\n    }\n    const dynamicClass = props.itemType;\n    return (\n        <section className=\"form-button-container\">\n            <div className={dynamicClass}>\n                {isItemFormOpen ?\n                    <section className=\"new-item-form\" ref={formContainerRef}>\n                     {dynamicClass === 'list' ?\n                        <input autoFocus type=\"text\" placeholder=\"Enter item title...\" onChange={updateItemTitle} value={newItemInputValue}/>\n                     :\n                        <textarea autoFocus type=\"text\" placeholder=\"Enter item title...\" onChange={updateItemTitle} value={newItemInputValue}/>}\n\n                        <footer>\n                            <button className=\"add-item trello-button\" onClick={onSubmit}>{`Add ${props.itemType}`}</button>\n                            <button className=\"remove-item\" onClick={toggleItemForm}><i className=\"fas fa-times\"></i></button>\n                        </footer>\n                    </section>\n                :\n                    <button ref={openFormButtonRef} className=\"create-item-button\" onClick={toggleItemForm}>+ Add a {props.itemType}</button>\n                }\n            </div>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}