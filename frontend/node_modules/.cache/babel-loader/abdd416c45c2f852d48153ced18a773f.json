{"ast":null,"code":"import Axios from 'axios'; // import { router } from '@/router'\n\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/';\nvar axios = Axios.create({\n  withCredentials: true\n});\nexport const httpService = {\n  get(endpoint, data) {\n    return ajax(endpoint, 'GET', data);\n  },\n\n  post(endpoint, data) {\n    return ajax(endpoint, 'POST', data);\n  },\n\n  put(endpoint, data) {\n    return ajax(endpoint, 'PUT', data);\n  },\n\n  delete(endpoint, data) {\n    return ajax(endpoint, 'DELETE', data);\n  }\n\n};\n\nasync function ajax(endpoint, method = 'GET', data = null) {\n  try {\n    const res = await axios({\n      url: `${BASE_URL}${endpoint}`,\n      method,\n      data,\n      params: method === 'GET' ? data : null\n    });\n    return res.data;\n  } catch (err) {\n    console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n    console.dir(err);\n\n    if (err.response && err.response.status === 401) {// Depends on routing startegy - hash or history\n      // window.location.assign('/#/login')\n      // window.location.assign('/login')\n      // router.push('/login')\n    }\n\n    throw err;\n  }\n}","map":{"version":3,"sources":["/Users/odedron/Desktop/Oded - Development/React-projects/trello/frontend/src/services/http.service.js"],"names":["Axios","BASE_URL","process","env","NODE_ENV","axios","create","withCredentials","httpService","get","endpoint","data","ajax","post","put","delete","method","res","url","params","err","console","log","dir","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACX,OADW,GAEX,uBAFN;AAKA,IAAIC,KAAK,GAAGL,KAAK,CAACM,MAAN,CAAa;AACrBC,EAAAA,eAAe,EAAE;AADI,CAAb,CAAZ;AAIA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiB;AAChB,WAAOC,IAAI,CAACF,QAAD,EAAW,KAAX,EAAkBC,IAAlB,CAAX;AACH,GAHsB;;AAIvBE,EAAAA,IAAI,CAACH,QAAD,EAAWC,IAAX,EAAiB;AACjB,WAAOC,IAAI,CAACF,QAAD,EAAW,MAAX,EAAmBC,IAAnB,CAAX;AACH,GANsB;;AAOvBG,EAAAA,GAAG,CAACJ,QAAD,EAAWC,IAAX,EAAiB;AAChB,WAAOC,IAAI,CAACF,QAAD,EAAW,KAAX,EAAkBC,IAAlB,CAAX;AACH,GATsB;;AAUvBI,EAAAA,MAAM,CAACL,QAAD,EAAWC,IAAX,EAAiB;AACnB,WAAOC,IAAI,CAACF,QAAD,EAAW,QAAX,EAAqBC,IAArB,CAAX;AACH;;AAZsB,CAApB;;AAeP,eAAeC,IAAf,CAAoBF,QAApB,EAA8BM,MAAM,GAAG,KAAvC,EAA8CL,IAAI,GAAG,IAArD,EAA2D;AACvD,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMZ,KAAK,CAAC;AACpBa,MAAAA,GAAG,EAAG,GAAEjB,QAAS,GAAES,QAAS,EADR;AAEpBM,MAAAA,MAFoB;AAGpBL,MAAAA,IAHoB;AAIpBQ,MAAAA,MAAM,EAAGH,MAAM,KAAK,KAAZ,GAAqBL,IAArB,GAA4B;AAJhB,KAAD,CAAvB;AAMA,WAAOM,GAAG,CAACN,IAAX;AACH,GARD,CAQE,OAAOS,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaN,MAAO,iCAAgCN,QAAS,gBAAeC,IAAK,EAA9F;AACAU,IAAAA,OAAO,CAACE,GAAR,CAAYH,GAAZ;;AACA,QAAIA,GAAG,CAACI,QAAJ,IAAgBJ,GAAG,CAACI,QAAJ,CAAaC,MAAb,KAAwB,GAA5C,EAAiD,CAC7C;AACA;AACA;AACA;AACH;;AACD,UAAML,GAAN;AACH;AACJ","sourcesContent":["import Axios from 'axios'\r\n// import { router } from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}